{"version":3,"sources":["board.js","index.js"],"names":["createNewBoard","makeMove","x","y","move","board","rowToChange","map","r","i","checkWin","getCell","left","right","top","bottom","toggleTurn","turn","createElemWithClassName","tagName","classNames","elem","document","createElement","forEach","name","classList","add","createX","createO","draw","j","boardEl","elems","cellElem","querySelector","console","log","Array","from","e","appendChild","Board","boardCoordinates","callback","mutationsList","mutation","target","getBoundingClientRect","observer","ResizeObserver","observe","querySelectorAll","el","addEventListener","id","split","parseInt","win"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["export function createNewBoard() {\n  return [\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"]\n  ];\n}\n\nexport function makeMove(x, y, move, board) {\n  const rowToChange = [...board[y]];\n  rowToChange[x] = move;\n\n  return board.map((r, i) => (i === y ? rowToChange : r));\n}\n\nexport function checkWin(board) {\n  // horizontal\n  if (board[0][0] === board[0][1] && board[0][1] === board[0][2]) {\n    return board[0][0];\n  } else if (board[1][0] === board[1][1] && board[1][1] === board[1][2]) {\n    return board[1][0];\n  } else if (board[2][0] === board[2][1] && board[2][1] === board[2][2]) {\n    return board[2][0];\n  }\n  // vertical\n  else if (board[0][0] === board[1][0] && board[1][0] === board[2][0]) {\n    return board[0][0];\n  } else if (board[0][1] === board[1][1] && board[1][1] === board[2][1]) {\n    return board[0][1];\n  } else if (board[0][2] === board[1][2] && board[1][2] === board[2][2]) {\n    return board[0][2];\n  }\n  // diagonal\n  else if (board[0][0] === board[1][1] && board[1][1] === board[2][2]) {\n    return board[0][0];\n  } else if (board[0][2] === board[1][1] && board[1][1] === board[2][0]) {\n    return board[0][2];\n  }\n\n  return false;\n}\n","import * as Board from \"./board\";\n\nfunction getCell(left, right, top, bottom) {\n  const i = 0;\n  const j = 0;\n  return [i, j];\n}\n\nfunction toggleTurn(turn) {\n  return turn === \"O\" ? \"X\" : \"O\";\n}\n\nfunction createElemWithClassName(tagName, ...classNames) {\n  const elem = document.createElement(tagName);\n  classNames.forEach(name => elem.classList.add(name));\n  return elem;\n}\n\nfunction createX() {\n  return [\n    createElemWithClassName(\"div\", \"x-cell-line\", \"rotate45\"),\n    createElemWithClassName(\"div\", \"x-cell-line\", \"rotate45neg\")\n  ];\n}\n\nfunction createO() {\n  return [createElemWithClassName(\"div\", \"o-cell\")];\n}\n\nfunction draw(turn, i, j, boardEl) {\n  const elems = turn === \"X\" ? createX() : createO();\n  const cellElem = document.querySelector(`#cell-${i}-${j}`);\n  console.log(cellElem, elems);\n\n  Array.from(elems).forEach(e => cellElem.appendChild(e));\n}\n\nlet board = Board.createNewBoard();\nlet boardCoordinates = { left: 0, right: 0, top: 0, bottom: 0 };\nlet turn = \"O\";\n\nconst boardEl = document.querySelector(\"#board\");\n\n// Callback function to execute when mutations are observed\nconst callback = function(mutationsList) {\n  // Use traditional 'for loops' for IE 11\n  for (let mutation of mutationsList) {\n    if (mutation.target === boardEl) {\n      const {\n        left,\n        right,\n        top,\n        bottom\n      } = mutation.target.getBoundingClientRect();\n      boardCoordinates = { left, right, top, bottom };\n    }\n  }\n};\n\n// Create an observer instance linked to the callback function\nconst observer = new ResizeObserver(callback);\n\n// Start observing the target node for configured mutations\nobserver.observe(boardEl);\n\ndocument.querySelectorAll(\".cell\").forEach(el =>\n  el.addEventListener(\"click\", function(e) {\n    const { id } = e.target;\n    const split = id.split(\"-\");\n    const i = parseInt(split[1]);\n    const j = parseInt(split[2]);\n\n    console.log(turn, i, j);\n    draw(turn, i, j, boardEl);\n    board = Board.makeMove(j - 1, i - 1, turn, board);\n    const win = Board.checkWin(board);\n    if (win) {\n      console.log(\"WIN \", win);\n    }\n    turn = toggleTurn(turn);\n  })\n);\n"]}